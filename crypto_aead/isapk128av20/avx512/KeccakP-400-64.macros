typedef unsigned char UINT8;
typedef unsigned short UINT16;
typedef unsigned long long UINT64;

static const UINT16 KeccakF400RoundConstants[20] = {
    0x0001,
    0x8082,
    0x808a,
    0x8000,
    0x808b,
    0x0001,
    0x8081,
    0x8009,
    0x008a,
    0x0088,
    0x8009,
    0x000a,
    0x808b,
    0x008b,
    0x8089,
    0x8003,
    0x8002,
    0x0080,
    0x800a,
    0x000a,
};

#define ROL16(a, offset) ((((UINT16)a) << offset) ^ (((UINT16)a) >> (16-offset)))

#define declareABCDEX \
    union State S; \
    union State B; \
    union State B1; \
    union State B2; \
    union State E; \
    UINT16 Ca, Ce, Ci, Co, Cu; \
    UINT16 Da, De, Di, Do, Du; \
    __m512i pchi1 = _mm512_set_epi32(0, 0, 0, 0x000014, 0x180017, 0x160015, 0x0f0013, 0x120011, 0x10000a, 0xe000d, 0xc000b, 0x50009, 0x80007, 0x60000, 0x40003, 0x20001); \
    __m512i pchi2 = _mm512_set_epi32(0, 0, 0, 0x000015, 0x140018, 0x170016, 0x10000f, 0x130012, 0x11000b, 0xa000e, 0xd000c, 0x60005, 0x90008, 0x70001, 0x00004, 0x30002); \

#define prepareThetaX \
    Ca = S.X.Aba^S.X.Aga^S.X.Aka^S.X.Ama^S.X.Asa; \
    Ce = S.X.Abe^S.X.Age^S.X.Ake^S.X.Ame^S.X.Ase; \
    Ci = S.X.Abi^S.X.Agi^S.X.Aki^S.X.Ami^S.X.Asi; \
    Co = S.X.Abo^S.X.Ago^S.X.Ako^S.X.Amo^S.X.Aso; \
    Cu = S.X.Abu^S.X.Agu^S.X.Aku^S.X.Amu^S.X.Asu; \

/* --- Code for round, with prepare-theta */
/* --- 64-bit lanes mapped to 64-bit words */
#define thetaRhoPiChiIotaPrepareTheta(i, A, E) \
    Da = Cu^ROL16(Ce, 1); \
    De = Ca^ROL16(Ci, 1); \
    Di = Ce^ROL16(Co, 1); \
    Do = Ci^ROL16(Cu, 1); \
    Du = Co^ROL16(Ca, 1); \
\
    A.X.Aba ^= Da; \
    B.X.Aba = A.X.Aba; \
    A.X.Age ^= De; \
    B.X.Abe = ROL16(A.X.Age, 12); \
    A.X.Aki ^= Di; \
    B.X.Abi = ROL16(A.X.Aki, 11); \
    A.X.Amo ^= Do; \
    B.X.Abo = ROL16(A.X.Amo, 5); \
    A.X.Asu ^= Du; \
    B.X.Abu = ROL16(A.X.Asu, 14); \
\
    A.X.Abo ^= Do; \
    B.X.Aga = ROL16(A.X.Abo, 12); \
    A.X.Agu ^= Du; \
    B.X.Age = ROL16(A.X.Agu, 4); \
    A.X.Aka ^= Da; \
    B.X.Agi = ROL16(A.X.Aka, 3); \
    A.X.Ame ^= De; \
    B.X.Ago = ROL16(A.X.Ame, 13); \
    A.X.Asi ^= Di; \
    B.X.Agu = ROL16(A.X.Asi, 13); \
\
    A.X.Abe ^= De; \
    B.X.Aka = ROL16(A.X.Abe, 1); \
    A.X.Agi ^= Di; \
    B.X.Ake = ROL16(A.X.Agi, 6); \
    A.X.Ako ^= Do; \
    B.X.Aki = ROL16(A.X.Ako, 9); \
    A.X.Amu ^= Du; \
    B.X.Ako = ROL16(A.X.Amu, 8); \
    A.X.Asa ^= Da; \
    B.X.Aku = ROL16(A.X.Asa, 2); \
\
    A.X.Abu ^= Du; \
    B.X.Ama = ROL16(A.X.Abu, 11); \
    A.X.Aga ^= Da; \
    B.X.Ame = ROL16(A.X.Aga, 4); \
    A.X.Ake ^= De; \
    B.X.Ami = ROL16(A.X.Ake, 10); \
    A.X.Ami ^= Di; \
    B.X.Amo = ROL16(A.X.Ami, 15); \
    A.X.Aso ^= Do; \
    B.X.Amu = ROL16(A.X.Aso, 8); \
\
    A.X.Abi ^= Di; \
    B.X.Asa = ROL16(A.X.Abi, 14); \
    A.X.Ago ^= Do; \
    B.X.Ase = ROL16(A.X.Ago, 7); \
    A.X.Aku ^= Du; \
    B.X.Asi = ROL16(A.X.Aku, 7); \
    A.X.Ama ^= Da; \
    B.X.Aso = ROL16(A.X.Ama, 9); \
    A.X.Ase ^= De; \
    B.X.Asu = ROL16(A.X.Ase, 2); \
\
    B1.S = _mm512_permutexvar_epi16(pchi1, B.S); \
    B2.S = _mm512_permutexvar_epi16(pchi2, B.S); \
    E.S = _mm512_ternarylogic_epi64(B.S, B1.S, B2.S, 0xd2); \
    E.X.Aba ^= KeccakF400RoundConstants[i]; \
    Ca = E.X.Aba; \
    Ce = E.X.Abe; \
    Ci = E.X.Abi; \
    Co = E.X.Abo; \
    Cu = E.X.Abu; \
    Ca ^= E.X.Aga; \
    Ce ^= E.X.Age; \
    Ci ^= E.X.Agi; \
    Co ^= E.X.Ago; \
    Cu ^= E.X.Agu; \
    Ca ^= E.X.Aka; \
    Ce ^= E.X.Ake; \
    Ci ^= E.X.Aki; \
    Co ^= E.X.Ako; \
    Cu ^= E.X.Aku; \
    Ca ^= E.X.Ama; \
    Ce ^= E.X.Ame; \
    Ci ^= E.X.Ami; \
    Co ^= E.X.Amo; \
    Cu ^= E.X.Amu; \
    Ca ^= E.X.Asa; \
    Ce ^= E.X.Ase; \
    Ci ^= E.X.Asi; \
    Co ^= E.X.Aso; \
    Cu ^= E.X.Asu; \
\

/* --- Code for round */
/* --- 64-bit lanes mapped to 64-bit words */
#define thetaRhoPiChiIota(i, A, E) \
    Da = Cu^ROL16(Ce, 1); \
    De = Ca^ROL16(Ci, 1); \
    Di = Ce^ROL16(Co, 1); \
    Do = Ci^ROL16(Cu, 1); \
    Du = Co^ROL16(Ca, 1); \
\
    A.X.Aba ^= Da; \
    B.X.Aba = A.X.Aba; \
    A.X.Age ^= De; \
    B.X.Abe = ROL16(A.X.Age, 12); \
    A.X.Aki ^= Di; \
    B.X.Abi = ROL16(A.X.Aki, 11); \
    A.X.Amo ^= Do; \
    B.X.Abo = ROL16(A.X.Amo, 5); \
    A.X.Asu ^= Du; \
    B.X.Abu = ROL16(A.X.Asu, 14); \
    E.X.Aba =   B.X.Aba ^((~B.X.Abe)&  B.X.Abi ); \
    E.X.Aba ^= KeccakF400RoundConstants[i]; \
    E.X.Abe =   B.X.Abe ^((~B.X.Abi)&  B.X.Abo ); \
    E.X.Abi =   B.X.Abi ^((~B.X.Abo)&  B.X.Abu ); \
    E.X.Abo =   B.X.Abo ^((~B.X.Abu)&  B.X.Aba ); \
    E.X.Abu =   B.X.Abu ^((~B.X.Aba)&  B.X.Abe ); \
\
    A.X.Abo ^= Do; \
    B.X.Aga = ROL16(A.X.Abo, 12); \
    A.X.Agu ^= Du; \
    B.X.Age = ROL16(A.X.Agu, 4); \
    A.X.Aka ^= Da; \
    B.X.Agi = ROL16(A.X.Aka, 3); \
    A.X.Ame ^= De; \
    B.X.Ago = ROL16(A.X.Ame, 13); \
    A.X.Asi ^= Di; \
    B.X.Agu = ROL16(A.X.Asi, 13); \
    E.X.Aga =   B.X.Aga ^((~B.X.Age)&  B.X.Agi ); \
    E.X.Age =   B.X.Age ^((~B.X.Agi)&  B.X.Ago ); \
    E.X.Agi =   B.X.Agi ^((~B.X.Ago)&  B.X.Agu ); \
    E.X.Ago =   B.X.Ago ^((~B.X.Agu)&  B.X.Aga ); \
    E.X.Agu =   B.X.Agu ^((~B.X.Aga)&  B.X.Age ); \
\
    A.X.Abe ^= De; \
    B.X.Aka = ROL16(A.X.Abe, 1); \
    A.X.Agi ^= Di; \
    B.X.Ake = ROL16(A.X.Agi, 6); \
    A.X.Ako ^= Do; \
    B.X.Aki = ROL16(A.X.Ako, 9); \
    A.X.Amu ^= Du; \
    B.X.Ako = ROL16(A.X.Amu, 8); \
    A.X.Asa ^= Da; \
    B.X.Aku = ROL16(A.X.Asa, 2); \
    E.X.Aka =   B.X.Aka ^((~B.X.Ake)&  B.X.Aki ); \
    E.X.Ake =   B.X.Ake ^((~B.X.Aki)&  B.X.Ako ); \
    E.X.Aki =   B.X.Aki ^((~B.X.Ako)&  B.X.Aku ); \
    E.X.Ako =   B.X.Ako ^((~B.X.Aku)&  B.X.Aka ); \
    E.X.Aku =   B.X.Aku ^((~B.X.Aka)&  B.X.Ake ); \
\
    A.X.Abu ^= Du; \
    B.X.Ama = ROL16(A.X.Abu, 11); \
    A.X.Aga ^= Da; \
    B.X.Ame = ROL16(A.X.Aga, 4); \
    A.X.Ake ^= De; \
    B.X.Ami = ROL16(A.X.Ake, 10); \
    A.X.Ami ^= Di; \
    B.X.Amo = ROL16(A.X.Ami, 15); \
    A.X.Aso ^= Do; \
    B.X.Amu = ROL16(A.X.Aso, 8); \
    E.X.Ama =   B.X.Ama ^((~B.X.Ame)&  B.X.Ami ); \
    E.X.Ame =   B.X.Ame ^((~B.X.Ami)&  B.X.Amo ); \
    E.X.Ami =   B.X.Ami ^((~B.X.Amo)&  B.X.Amu ); \
    E.X.Amo =   B.X.Amo ^((~B.X.Amu)&  B.X.Ama ); \
    E.X.Amu =   B.X.Amu ^((~B.X.Ama)&  B.X.Ame ); \
\
    A.X.Abi ^= Di; \
    B.X.Asa = ROL16(A.X.Abi, 14); \
    A.X.Ago ^= Do; \
    B.X.Ase = ROL16(A.X.Ago, 7); \
    A.X.Aku ^= Du; \
    B.X.Asi = ROL16(A.X.Aku, 7); \
    A.X.Ama ^= Da; \
    B.X.Aso = ROL16(A.X.Ama, 9); \
    A.X.Ase ^= De; \
    B.X.Asu = ROL16(A.X.Ase, 2); \
    E.X.Asa =   B.X.Asa ^((~B.X.Ase)&  B.X.Asi ); \
    E.X.Ase =   B.X.Ase ^((~B.X.Asi)&  B.X.Aso ); \
    E.X.Asi =   B.X.Asi ^((~B.X.Aso)&  B.X.Asu ); \
    E.X.Aso =   B.X.Aso ^((~B.X.Asu)&  B.X.Asa ); \
    E.X.Asu =   B.X.Asu ^((~B.X.Asa)&  B.X.Ase ); \
\

#define copyStateVariables(A, Y) \
    A.X.Aba = Y.X.Aba; \
    A.X.Abe = Y.X.Abe; \
    A.X.Abi = Y.X.Abi; \
    A.X.Abo = Y.X.Abo; \
    A.X.Abu = Y.X.Abu; \
    A.X.Aga = Y.X.Aga; \
    A.X.Age = Y.X.Age; \
    A.X.Agi = Y.X.Agi; \
    A.X.Ago = Y.X.Ago; \
    A.X.Agu = Y.X.Agu; \
    A.X.Aka = Y.X.Aka; \
    A.X.Ake = Y.X.Ake; \
    A.X.Aki = Y.X.Aki; \
    A.X.Ako = Y.X.Ako; \
    A.X.Aku = Y.X.Aku; \
    A.X.Ama = Y.X.Ama; \
    A.X.Ame = Y.X.Ame; \
    A.X.Ami = Y.X.Ami; \
    A.X.Amo = Y.X.Amo; \
    A.X.Amu = Y.X.Amu; \
    A.X.Asa = Y.X.Asa; \
    A.X.Ase = Y.X.Ase; \
    A.X.Asi = Y.X.Asi; \
    A.X.Aso = Y.X.Aso; \
    A.X.Asu = Y.X.Asu; \
\

// prevent "warning: backslash-newline at end of file"
